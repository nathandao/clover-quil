{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clover.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {draw {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 54, :column 7, :end-line 54, :end-column 11, :arglists (quote ([]))}, :name clover.core/draw, :variadic false, :file "src/clover/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, generate-color {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 5, :column 7, :end-line 5, :end-column 21, :arglists (quote ([max]))}, :name clover.core/generate-color, :variadic false, :file "src/clover/core.cljs", :end-column 21, :method-params ([max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([max]))}, update-stroke-color {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 38, :column 7, :end-line 38, :end-column 26, :arglists (quote ([color-1 color-2 ratio]))}, :name clover.core/update-stroke-color, :variadic false, :file "src/clover/core.cljs", :end-column 26, :method-params ([color-1 color-2 ratio]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([color-1 color-2 ratio]))}, combine-color {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 18, :column 7, :end-line 18, :end-column 20, :arglists (quote ([color-1 color-2 ratio]))}, :name clover.core/combine-color, :variadic false, :file "src/clover/core.cljs", :end-column 20, :method-params ([color-1 color-2 ratio]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([color-1 color-2 ratio]))}, frame-rate {:name clover.core/frame-rate, :file "src/clover/core.cljs", :line 10, :column 1, :end-line 10, :end-column 16, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 10, :column 6, :end-line 10, :end-column 16}, :tag number}, init-t {:name clover.core/init-t, :file "src/clover/core.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 11, :column 6, :end-line 11, :end-column 12}, :tag number}, setup {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 60, :column 7, :end-line 60, :end-column 12, :arglists (quote ([]))}, :name clover.core/setup, :variadic false, :file "src/clover/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, color-2 {:name clover.core/color-2, :file "src/clover/core.cljs", :line 14, :column 1, :end-line 14, :end-column 13, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 14, :column 6, :end-line 14, :end-column 13}, :tag cljs.core/IMap}, color-1 {:name clover.core/color-1, :file "src/clover/core.cljs", :line 13, :column 1, :end-line 13, :end-column 13, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 13, :column 6, :end-line 13, :end-column 13}, :tag any}, clover {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 65, :column 14, :end-line 65, :end-column 20, :export true, :arglists (quote ([]))}, :name clover.core/clover, :variadic false, :file "src/clover/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, f {:protocol-inline nil, :meta {:file "/home/ndao/pimpin/clover/src/clover/core.cljs", :line 44, :column 7, :end-line 44, :end-column 8, :arglists (quote ([t]))}, :name clover.core/f, :variadic false, :file "src/clover/core.cljs", :end-column 8, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:r :fn :size :setup :g :host :b :host-id :no-start :draw}, :order [:r :g :b :host :size :setup :draw :no-start :fn :host-id]}, :doc nil}